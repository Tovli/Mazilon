// Mocks generated by Mockito 5.4.4 from annotations
// in mazilon/test/form/formpagetemplate_Test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i4;

import 'package:mazilon/util/appInformation.dart' as _i2;
import 'package:mazilon/util/userInformation.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AppInformation].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppInformation extends _i1.Mock implements _i2.AppInformation {
  MockAppInformation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get disclaimerText => (super.noSuchMethod(
        Invocation.getter(#disclaimerText),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#disclaimerText),
        ),
      ) as String);

  @override
  set disclaimerText(String? _disclaimerText) => super.noSuchMethod(
        Invocation.setter(
          #disclaimerText,
          _disclaimerText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get disclaimerNext => (super.noSuchMethod(
        Invocation.getter(#disclaimerNext),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#disclaimerNext),
        ),
      ) as String);

  @override
  set disclaimerNext(String? _disclaimerNext) => super.noSuchMethod(
        Invocation.setter(
          #disclaimerNext,
          _disclaimerNext,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get reminderMainTitle => (super.noSuchMethod(
        Invocation.getter(#reminderMainTitle),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#reminderMainTitle),
        ),
      ) as String);

  @override
  set reminderMainTitle(String? _reminderMainTitle) => super.noSuchMethod(
        Invocation.setter(
          #reminderMainTitle,
          _reminderMainTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get reminderSubTitle => (super.noSuchMethod(
        Invocation.getter(#reminderSubTitle),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#reminderSubTitle),
        ),
      ) as String);

  @override
  set reminderSubTitle(String? _reminderSubTitle) => super.noSuchMethod(
        Invocation.setter(
          #reminderSubTitle,
          _reminderSubTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get homeTitleGreeting => (super.noSuchMethod(
        Invocation.getter(#homeTitleGreeting),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#homeTitleGreeting),
        ),
      ) as String);

  @override
  set homeTitleGreeting(String? _homeTitleGreeting) => super.noSuchMethod(
        Invocation.setter(
          #homeTitleGreeting,
          _homeTitleGreeting,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get personalPlanMainTitle => (super.noSuchMethod(
        Invocation.getter(#personalPlanMainTitle),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set personalPlanMainTitle(Map<String, String>? _personalPlanMainTitle) =>
      super.noSuchMethod(
        Invocation.setter(
          #personalPlanMainTitle,
          _personalPlanMainTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get personalPlanSubTitle => (super.noSuchMethod(
        Invocation.getter(#personalPlanSubTitle),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set personalPlanSubTitle(Map<String, String>? _personalPlanSubTitle) =>
      super.noSuchMethod(
        Invocation.setter(
          #personalPlanSubTitle,
          _personalPlanSubTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get traitMainTitle => (super.noSuchMethod(
        Invocation.getter(#traitMainTitle),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set traitMainTitle(Map<String, String>? _traitMainTitle) =>
      super.noSuchMethod(
        Invocation.setter(
          #traitMainTitle,
          _traitMainTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get traitSubTitle => (super.noSuchMethod(
        Invocation.getter(#traitSubTitle),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set traitSubTitle(Map<String, String>? _traitSubTitle) => super.noSuchMethod(
        Invocation.setter(
          #traitSubTitle,
          _traitSubTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get journalMainTitle => (super.noSuchMethod(
        Invocation.getter(#journalMainTitle),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set journalMainTitle(Map<String, String>? _journalMainTitle) =>
      super.noSuchMethod(
        Invocation.setter(
          #journalMainTitle,
          _journalMainTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get journalSubTitle => (super.noSuchMethod(
        Invocation.getter(#journalSubTitle),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set journalSubTitle(Map<String, String>? _journalSubTitle) =>
      super.noSuchMethod(
        Invocation.setter(
          #journalSubTitle,
          _journalSubTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get journalPopUpText => (super.noSuchMethod(
        Invocation.getter(#journalPopUpText),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set journalPopUpText(Map<String, String>? _journalPopUpText) =>
      super.noSuchMethod(
        Invocation.setter(
          #journalPopUpText,
          _journalPopUpText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get positiveTraitsPopUpText => (super.noSuchMethod(
        Invocation.getter(#positiveTraitsPopUpText),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set positiveTraitsPopUpText(Map<String, String>? _positiveTraitsPopUpText) =>
      super.noSuchMethod(
        Invocation.setter(
          #positiveTraitsPopUpText,
          _positiveTraitsPopUpText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get popupBack => (super.noSuchMethod(
        Invocation.getter(#popupBack),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set popupBack(Map<String, String>? _popupBack) => super.noSuchMethod(
        Invocation.setter(
          #popupBack,
          _popupBack,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get othersuggestions => (super.noSuchMethod(
        Invocation.getter(#othersuggestions),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set othersuggestions(Map<String, String>? _othersuggestions) =>
      super.noSuchMethod(
        Invocation.setter(
          #othersuggestions,
          _othersuggestions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get aboutPageText => (super.noSuchMethod(
        Invocation.getter(#aboutPageText),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set aboutPageText(Map<String, String>? _aboutPageText) => super.noSuchMethod(
        Invocation.setter(
          #aboutPageText,
          _aboutPageText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get returnToPlanStrings => (super.noSuchMethod(
        Invocation.getter(#returnToPlanStrings),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set returnToPlanStrings(Map<String, String>? _returnToPlanStrings) =>
      super.noSuchMethod(
        Invocation.setter(
          #returnToPlanStrings,
          _returnToPlanStrings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get warningHomePageTitles => (super.noSuchMethod(
        Invocation.getter(#warningHomePageTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set warningHomePageTitles(Map<String, String>? _warningHomePageTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #warningHomePageTitles,
          _warningHomePageTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get traitsHomePageTitles => (super.noSuchMethod(
        Invocation.getter(#traitsHomePageTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set traitsHomePageTitles(Map<String, String>? _traitsHomePageTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #traitsHomePageTitles,
          _traitsHomePageTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get introductionFormFirstPage => (super.noSuchMethod(
        Invocation.getter(#introductionFormFirstPage),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set introductionFormFirstPage(
          Map<String, String>? _introductionFormFirstPage) =>
      super.noSuchMethod(
        Invocation.setter(
          #introductionFormFirstPage,
          _introductionFormFirstPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get introductionFormSecondPage => (super.noSuchMethod(
        Invocation.getter(#introductionFormSecondPage),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set introductionFormSecondPage(
          Map<String, String>? _introductionFormSecondPage) =>
      super.noSuchMethod(
        Invocation.setter(
          #introductionFormSecondPage,
          _introductionFormSecondPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get introductionFormLastPage => (super.noSuchMethod(
        Invocation.getter(#introductionFormLastPage),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set introductionFormLastPage(
          Map<String, String>? _introductionFormLastPage) =>
      super.noSuchMethod(
        Invocation.setter(
          #introductionFormLastPage,
          _introductionFormLastPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get signUpLoginPage => (super.noSuchMethod(
        Invocation.getter(#signUpLoginPage),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set signUpLoginPage(Map<String, String>? _signUpLoginPage) =>
      super.noSuchMethod(
        Invocation.setter(
          #signUpLoginPage,
          _signUpLoginPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get personalInformationForm => (super.noSuchMethod(
        Invocation.getter(#personalInformationForm),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set personalInformationForm(Map<String, String>? _personalInformationForm) =>
      super.noSuchMethod(
        Invocation.setter(
          #personalInformationForm,
          _personalInformationForm,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<String>> get homePageInspirationalQuotes =>
      (super.noSuchMethod(
        Invocation.getter(#homePageInspirationalQuotes),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  set homePageInspirationalQuotes(
          Map<String, List<String>>? _homePageInspirationalQuotes) =>
      super.noSuchMethod(
        Invocation.setter(
          #homePageInspirationalQuotes,
          _homePageInspirationalQuotes,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get shareMessages => (super.noSuchMethod(
        Invocation.getter(#shareMessages),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set shareMessages(Map<String, String>? _shareMessages) => super.noSuchMethod(
        Invocation.setter(
          #shareMessages,
          _shareMessages,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get sharePDFtexts => (super.noSuchMethod(
        Invocation.getter(#sharePDFtexts),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set sharePDFtexts(Map<String, String>? _sharePDFtexts) => super.noSuchMethod(
        Invocation.setter(
          #sharePDFtexts,
          _sharePDFtexts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get thanksSuggestionsList => (super.noSuchMethod(
        Invocation.getter(#thanksSuggestionsList),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set thanksSuggestionsList(List<String>? _thanksSuggestionsList) =>
      super.noSuchMethod(
        Invocation.setter(
          #thanksSuggestionsList,
          _thanksSuggestionsList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get phonePersonalPlanText => (super.noSuchMethod(
        Invocation.getter(#phonePersonalPlanText),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set phonePersonalPlanText(List<String>? _phonePersonalPlanText) =>
      super.noSuchMethod(
        Invocation.setter(
          #phonePersonalPlanText,
          _phonePersonalPlanText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get extraMenuStrings => (super.noSuchMethod(
        Invocation.getter(#extraMenuStrings),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set extraMenuStrings(Map<String, String>? _extraMenuStrings) =>
      super.noSuchMethod(
        Invocation.setter(
          #extraMenuStrings,
          _extraMenuStrings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<String>> get positiveTraitsSuggestionsList =>
      (super.noSuchMethod(
        Invocation.getter(#positiveTraitsSuggestionsList),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  set positiveTraitsSuggestionsList(
          Map<String, List<String>>? _positiveTraitsSuggestionsList) =>
      super.noSuchMethod(
        Invocation.setter(
          #positiveTraitsSuggestionsList,
          _positiveTraitsSuggestionsList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formPhonePage => (super.noSuchMethod(
        Invocation.getter(#formPhonePage),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formPhonePage(Map<String, String>? _formPhonePage) => super.noSuchMethod(
        Invocation.setter(
          #formPhonePage,
          _formPhonePage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<String>> get phonePageTitles => (super.noSuchMethod(
        Invocation.getter(#phonePageTitles),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  set phonePageTitles(Map<String, List<String>>? _phonePageTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #phonePageTitles,
          _phonePageTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formDifficultEventsTitles => (super.noSuchMethod(
        Invocation.getter(#formDifficultEventsTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formDifficultEventsTitles(
          Map<String, String>? _formDifficultEventsTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #formDifficultEventsTitles,
          _formDifficultEventsTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formDistractionsTitles => (super.noSuchMethod(
        Invocation.getter(#formDistractionsTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formDistractionsTitles(Map<String, String>? _formDistractionsTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #formDistractionsTitles,
          _formDistractionsTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formFeelBetterTitles => (super.noSuchMethod(
        Invocation.getter(#formFeelBetterTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formFeelBetterTitles(Map<String, String>? _formFeelBetterTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #formFeelBetterTitles,
          _formFeelBetterTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formMakeSaferTitles => (super.noSuchMethod(
        Invocation.getter(#formMakeSaferTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formMakeSaferTitles(Map<String, String>? _formMakeSaferTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #formMakeSaferTitles,
          _formMakeSaferTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formSharePageTitles => (super.noSuchMethod(
        Invocation.getter(#formSharePageTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formSharePageTitles(Map<String, String>? _formSharePageTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #formSharePageTitles,
          _formSharePageTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get formSkipButtonText => (super.noSuchMethod(
        Invocation.getter(#formSkipButtonText),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set formSkipButtonText(Map<String, String>? _formSkipButtonText) =>
      super.noSuchMethod(
        Invocation.setter(
          #formSkipButtonText,
          _formSkipButtonText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get feelGoodPageTitles => (super.noSuchMethod(
        Invocation.getter(#feelGoodPageTitles),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set feelGoodPageTitles(Map<String, String>? _feelGoodPageTitles) =>
      super.noSuchMethod(
        Invocation.setter(
          #feelGoodPageTitles,
          _feelGoodPageTitles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get syncPages => (super.noSuchMethod(
        Invocation.getter(#syncPages),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set syncPages(Map<String, String>? _syncPages) => super.noSuchMethod(
        Invocation.setter(
          #syncPages,
          _syncPages,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get test1 => (super.noSuchMethod(
        Invocation.getter(#test1),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set test1(List<String>? _test1) => super.noSuchMethod(
        Invocation.setter(
          #test1,
          _test1,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastUpdated(DateTime? _lastUpdated) => super.noSuchMethod(
        Invocation.setter(
          #lastUpdated,
          _lastUpdated,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get appVersion => (super.noSuchMethod(
        Invocation.getter(#appVersion),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#appVersion),
        ),
      ) as String);

  @override
  set appVersion(String? _appVersion) => super.noSuchMethod(
        Invocation.setter(
          #appVersion,
          _appVersion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get DifficultEventsSug => (super.noSuchMethod(
        Invocation.getter(#DifficultEventsSug),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set DifficultEventsSug(List<String>? _DifficultEventsSug) =>
      super.noSuchMethod(
        Invocation.setter(
          #DifficultEventsSug,
          _DifficultEventsSug,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get DistractionsSug => (super.noSuchMethod(
        Invocation.getter(#DistractionsSug),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set DistractionsSug(List<String>? _DistractionsSug) => super.noSuchMethod(
        Invocation.setter(
          #DistractionsSug,
          _DistractionsSug,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get FeelBetterSug => (super.noSuchMethod(
        Invocation.getter(#FeelBetterSug),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set FeelBetterSug(List<String>? _FeelBetterSug) => super.noSuchMethod(
        Invocation.setter(
          #FeelBetterSug,
          _FeelBetterSug,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get MakeSaferSug => (super.noSuchMethod(
        Invocation.getter(#MakeSaferSug),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set MakeSaferSug(List<String>? _MakeSaferSug) => super.noSuchMethod(
        Invocation.setter(
          #MakeSaferSug,
          _MakeSaferSug,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get addFormStrings => (super.noSuchMethod(
        Invocation.getter(#addFormStrings),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set addFormStrings(Map<String, String>? _addFormStrings) =>
      super.noSuchMethod(
        Invocation.setter(
          #addFormStrings,
          _addFormStrings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get addThanksFormStrings => (super.noSuchMethod(
        Invocation.getter(#addThanksFormStrings),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set addThanksFormStrings(Map<String, String>? _addThanksFormStrings) =>
      super.noSuchMethod(
        Invocation.setter(
          #addThanksFormStrings,
          _addThanksFormStrings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get addFormPageTemplateStrings => (super.noSuchMethod(
        Invocation.getter(#addFormPageTemplateStrings),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set addFormPageTemplateStrings(
          Map<String, String>? _addFormPageTemplateStrings) =>
      super.noSuchMethod(
        Invocation.setter(
          #addFormPageTemplateStrings,
          _addFormPageTemplateStrings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get IntroductionRestart => (super.noSuchMethod(
        Invocation.getter(#IntroductionRestart),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set IntroductionRestart(Map<String, String>? _IntroductionRestart) =>
      super.noSuchMethod(
        Invocation.setter(
          #IntroductionRestart,
          _IntroductionRestart,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<String>> get wellnessVideos => (super.noSuchMethod(
        Invocation.getter(#wellnessVideos),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  set wellnessVideos(Map<String, List<String>>? _wellnessVideos) =>
      super.noSuchMethod(
        Invocation.setter(
          #wellnessVideos,
          _wellnessVideos,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void updateReminderMainTitle(String? title) => super.noSuchMethod(
        Invocation.method(
          #updateReminderMainTitle,
          [title],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateReminderSubTitle(String? subTitle) => super.noSuchMethod(
        Invocation.method(
          #updateReminderSubTitle,
          [subTitle],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateHomeTitleGreeting(String? greeting) => super.noSuchMethod(
        Invocation.method(
          #updateHomeTitleGreeting,
          [greeting],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePersonalPlanMainTitle(Map<String, String>? title) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePersonalPlanMainTitle,
          [title],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePersonalPlanSubTitle(Map<String, String>? subTitle) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePersonalPlanSubTitle,
          [subTitle],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTraitMainTitle(Map<String, String>? title) => super.noSuchMethod(
        Invocation.method(
          #updateTraitMainTitle,
          [title],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTraitSubTitle(Map<String, String>? subTitle) => super.noSuchMethod(
        Invocation.method(
          #updateTraitSubTitle,
          [subTitle],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateJournalMainTitle(Map<String, String>? title) => super.noSuchMethod(
        Invocation.method(
          #updateJournalMainTitle,
          [title],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateJournalSubTitle(Map<String, String>? subTitle) =>
      super.noSuchMethod(
        Invocation.method(
          #updateJournalSubTitle,
          [subTitle],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateReturnToPlanStrings(Map<String, String>? strings) =>
      super.noSuchMethod(
        Invocation.method(
          #updateReturnToPlanStrings,
          [strings],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateWarningHomePageTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateWarningHomePageTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTraitsHomePageTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateTraitsHomePageTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateIntroductionFormFirstPage(Map<String, String>? form) =>
      super.noSuchMethod(
        Invocation.method(
          #updateIntroductionFormFirstPage,
          [form],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateIntroductionFormSecondPage(Map<String, String>? form) =>
      super.noSuchMethod(
        Invocation.method(
          #updateIntroductionFormSecondPage,
          [form],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateIntroductionFormLastPage(Map<String, String>? form) =>
      super.noSuchMethod(
        Invocation.method(
          #updateIntroductionFormLastPage,
          [form],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePersonalInformationForm(Map<String, String>? form) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePersonalInformationForm,
          [form],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateLastUpdated(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #updateLastUpdated,
          [date],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateHomePageInspirationalQuotes(Map<String, List<String>>? quotes) =>
      super.noSuchMethod(
        Invocation.method(
          #updateHomePageInspirationalQuotes,
          [quotes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateTest1(List<String>? test) => super.noSuchMethod(
        Invocation.method(
          #updateTest1,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateShareMessages(Map<String, String>? messages) => super.noSuchMethod(
        Invocation.method(
          #updateShareMessages,
          [messages],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateThanksSuggestionsList(List<String>? suggestions) =>
      super.noSuchMethod(
        Invocation.method(
          #updateThanksSuggestionsList,
          [suggestions],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePositiveTraitsSuggestionsList(
          Map<String, List<String>>? suggestions) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePositiveTraitsSuggestionsList,
          [suggestions],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateJournalPopUpText(Map<String, String>? text) => super.noSuchMethod(
        Invocation.method(
          #updateJournalPopUpText,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePositiveTraitsPopUpText(Map<String, String>? text) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePositiveTraitsPopUpText,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormPhonePage(Map<String, String>? form) => super.noSuchMethod(
        Invocation.method(
          #updateFormPhonePage,
          [form],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePhonePageTitles(Map<String, List<String>>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updatePhonePageTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormDifficultEventsTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFormDifficultEventsTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormDistractionsTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFormDistractionsTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormFeelBetterTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFormFeelBetterTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormMakeSaferTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFormMakeSaferTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormSharePageTitles(Map<String, String>? titles) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFormSharePageTitles,
          [titles],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePhonePersonalPlanText(dynamic texts) => super.noSuchMethod(
        Invocation.method(
          #updatePhonePersonalPlanText,
          [texts],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAppVersion(String? version) => super.noSuchMethod(
        Invocation.method(
          #updateAppVersion,
          [version],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDifficultEventsSug(List<String>? sug) => super.noSuchMethod(
        Invocation.method(
          #updateDifficultEventsSug,
          [sug],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDistractionsSug(List<String>? sug) => super.noSuchMethod(
        Invocation.method(
          #updateDistractionsSug,
          [sug],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFeelBetterSug(List<String>? sug) => super.noSuchMethod(
        Invocation.method(
          #updateFeelBetterSug,
          [sug],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateMakeSaferSug(List<String>? sug) => super.noSuchMethod(
        Invocation.method(
          #updateMakeSaferSug,
          [sug],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSharePDFtexts(Map<String, String>? texts) => super.noSuchMethod(
        Invocation.method(
          #updateSharePDFtexts,
          [texts],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateWellnessVideos(Map<String, List<String>>? videos) =>
      super.noSuchMethod(
        Invocation.method(
          #updateWellnessVideos,
          [videos],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAboutPageText(Map<String, String>? texts) => super.noSuchMethod(
        Invocation.method(
          #updateAboutPageText,
          [texts],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDisclaimerPageText(String? text) => super.noSuchMethod(
        Invocation.method(
          #updateDisclaimerPageText,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDisclaimerPageNext(String? text) => super.noSuchMethod(
        Invocation.method(
          #updateDisclaimerPageNext,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFormSkipButtonText(Map<String, String>? text) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFormSkipButtonText,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFeelGoodPageTitles(Map<String, String>? text) =>
      super.noSuchMethod(
        Invocation.method(
          #updateFeelGoodPageTitles,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateExtraMenuStrings(Map<String, String>? text) => super.noSuchMethod(
        Invocation.method(
          #updateExtraMenuStrings,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSyncPages(Map<String, String>? text) => super.noSuchMethod(
        Invocation.method(
          #updateSyncPages,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePopupBack(Map<String, String>? text) => super.noSuchMethod(
        Invocation.method(
          #updatePopupBack,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSignUpLoginPage(Map<String, String>? text) => super.noSuchMethod(
        Invocation.method(
          #updateSignUpLoginPage,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAddFormStrings(Map<String, String>? text) => super.noSuchMethod(
        Invocation.method(
          #updateAddFormStrings,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAddThanksFormStrings(Map<String, String>? text) =>
      super.noSuchMethod(
        Invocation.method(
          #updateAddThanksFormStrings,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAddFormPageTemplateStrings(Map<String, String>? text) =>
      super.noSuchMethod(
        Invocation.method(
          #updateAddFormPageTemplateStrings,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateIntroductionRestart(Map<String, String>? text) =>
      super.noSuchMethod(
        Invocation.method(
          #updateIntroductionRestart,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateOtherSuggestions(Map<String, String>? title) => super.noSuchMethod(
        Invocation.method(
          #updateOtherSuggestions,
          [title],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserInformation].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserInformation extends _i1.Mock implements _i5.UserInformation {
  MockUserInformation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get localeName => (super.noSuchMethod(
        Invocation.getter(#localeName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#localeName),
        ),
      ) as String);

  @override
  set localeName(String? _localeName) => super.noSuchMethod(
        Invocation.setter(
          #localeName,
          _localeName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get gender => (super.noSuchMethod(
        Invocation.getter(#gender),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#gender),
        ),
      ) as String);

  @override
  set gender(String? _gender) => super.noSuchMethod(
        Invocation.setter(
          #gender,
          _gender,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get age => (super.noSuchMethod(
        Invocation.getter(#age),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#age),
        ),
      ) as String);

  @override
  set age(String? _age) => super.noSuchMethod(
        Invocation.setter(
          #age,
          _age,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get binary => (super.noSuchMethod(
        Invocation.getter(#binary),
        returnValue: false,
      ) as bool);

  @override
  set binary(bool? _binary) => super.noSuchMethod(
        Invocation.setter(
          #binary,
          _binary,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get disclaimerSigned => (super.noSuchMethod(
        Invocation.getter(#disclaimerSigned),
        returnValue: false,
      ) as bool);

  @override
  set disclaimerSigned(bool? _disclaimerSigned) => super.noSuchMethod(
        Invocation.setter(
          #disclaimerSigned,
          _disclaimerSigned,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get difficultEvents => (super.noSuchMethod(
        Invocation.getter(#difficultEvents),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set difficultEvents(List<String>? _difficultEvents) => super.noSuchMethod(
        Invocation.setter(
          #difficultEvents,
          _difficultEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get positiveTraits => (super.noSuchMethod(
        Invocation.getter(#positiveTraits),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set positiveTraits(List<String>? _positiveTraits) => super.noSuchMethod(
        Invocation.setter(
          #positiveTraits,
          _positiveTraits,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get makeSafer => (super.noSuchMethod(
        Invocation.getter(#makeSafer),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set makeSafer(List<String>? _makeSafer) => super.noSuchMethod(
        Invocation.setter(
          #makeSafer,
          _makeSafer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get feelBetter => (super.noSuchMethod(
        Invocation.getter(#feelBetter),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set feelBetter(List<String>? _feelBetter) => super.noSuchMethod(
        Invocation.setter(
          #feelBetter,
          _feelBetter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get distractions => (super.noSuchMethod(
        Invocation.getter(#distractions),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set distractions(List<String>? _distractions) => super.noSuchMethod(
        Invocation.setter(
          #distractions,
          _distractions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get loggedIn => (super.noSuchMethod(
        Invocation.getter(#loggedIn),
        returnValue: false,
      ) as bool);

  @override
  set loggedIn(bool? _loggedIn) => super.noSuchMethod(
        Invocation.setter(
          #loggedIn,
          _loggedIn,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  set userId(String? _userId) => super.noSuchMethod(
        Invocation.setter(
          #userId,
          _userId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get notificationMinute => (super.noSuchMethod(
        Invocation.getter(#notificationMinute),
        returnValue: 0,
      ) as int);

  @override
  set notificationMinute(int? _notificationMinute) => super.noSuchMethod(
        Invocation.setter(
          #notificationMinute,
          _notificationMinute,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get notificationHour => (super.noSuchMethod(
        Invocation.getter(#notificationHour),
        returnValue: 0,
      ) as int);

  @override
  set notificationHour(int? _notificationHour) => super.noSuchMethod(
        Invocation.setter(
          #notificationHour,
          _notificationHour,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, List<String>> get thanks => (super.noSuchMethod(
        Invocation.getter(#thanks),
        returnValue: <String, List<String>>{},
      ) as Map<String, List<String>>);

  @override
  set thanks(Map<String, List<String>>? _thanks) => super.noSuchMethod(
        Invocation.setter(
          #thanks,
          _thanks,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateGender(String? text) => super.noSuchMethod(
        Invocation.method(
          #updateGender,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateName(String? text) => super.noSuchMethod(
        Invocation.method(
          #updateName,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateAge(String? text) => super.noSuchMethod(
        Invocation.method(
          #updateAge,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateBinary(bool? value) => super.noSuchMethod(
        Invocation.method(
          #updateBinary,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDifficultEvents(List<String>? value) => super.noSuchMethod(
        Invocation.method(
          #updateDifficultEvents,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateMakeSafer(List<String>? value) => super.noSuchMethod(
        Invocation.method(
          #updateMakeSafer,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateFeelBetter(List<String>? value) => super.noSuchMethod(
        Invocation.method(
          #updateFeelBetter,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDistractions(List<String>? value) => super.noSuchMethod(
        Invocation.method(
          #updateDistractions,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDisclaimerSigned(bool? value) => super.noSuchMethod(
        Invocation.method(
          #updateDisclaimerSigned,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateLoggedIn(bool? value) => super.noSuchMethod(
        Invocation.method(
          #updateLoggedIn,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateUserId(String? value) => super.noSuchMethod(
        Invocation.method(
          #updateUserId,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateNotificationHour(int? value) => super.noSuchMethod(
        Invocation.method(
          #updateNotificationHour,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateNotificationMinute(int? value) => super.noSuchMethod(
        Invocation.method(
          #updateNotificationMinute,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateLocaleName(String? value) => super.noSuchMethod(
        Invocation.method(
          #updateLocaleName,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePositiveTraits(List<String>? value) => super.noSuchMethod(
        Invocation.method(
          #updatePositiveTraits,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateThanks(Map<String, List<String>>? value) => super.noSuchMethod(
        Invocation.method(
          #updateThanks,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
