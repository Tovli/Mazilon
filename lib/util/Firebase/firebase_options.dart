// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
///
/// This class is used to provide default [FirebaseOptions] for the current
/// platform. This is useful when you want to use the default options for a
/// specific platform without having to manually configure them.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCr9M_FI7ZyyoSCF8bJAh2qE8GRnloapU0',
    appId: '1:37967917693:web:9df832fad6228dfafaf714',
    messagingSenderId: '37967917693',
    projectId: 'mezilondb',
    authDomain: 'mezilondb.firebaseapp.com',
    storageBucket: 'mezilondb.appspot.com',
    measurementId: 'G-7MBJHH1KQJ',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyApA4kbqIF6RhP7gGM8MjI42vv3AhB_WQw',
    appId: '1:37967917693:android:961969071caf3fdefaf714',
    messagingSenderId: '37967917693',
    projectId: 'mezilondb',
    storageBucket: 'mezilondb.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCXwIIsZpoafJNcIKpDrfYZpyVjSgD04VU',
    appId: '1:37967917693:ios:a5eb6e7c6ecc3313faf714',
    messagingSenderId: '37967917693',
    projectId: 'mezilondb',
    storageBucket: 'mezilondb.appspot.com',
    iosClientId:
        '37967917693-hpl8lgbco59fmeaohv3i5m79nl698sf2.apps.googleusercontent.com',
    iosBundleId: 'com.example.mezilon',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyCXwIIsZpoafJNcIKpDrfYZpyVjSgD04VU',
    appId: '1:37967917693:ios:969e2a7aaf1f893dfaf714',
    messagingSenderId: '37967917693',
    projectId: 'mezilondb',
    storageBucket: 'mezilondb.appspot.com',
    iosClientId:
        '37967917693-ttkfpmlakvmadflbkaual14ibs2au8a1.apps.googleusercontent.com',
    iosBundleId: 'com.example.mezilon.RunnerTests',
  );
  static const FirebaseOptions dbUsers = FirebaseOptions(
    apiKey: 'AIzaSyDyLtowp07wCEq2pOemyMe8gabW_lIl2_8',
    appId: '1:315149096391:android:340f005731bd32d14ef5e2',
    messagingSenderId: '', // Not provided in JSON
    projectId: 'matzilonusers',
    authDomain: 'matzilonusers.firebaseapp.com', // Constructed from projectId
    storageBucket: 'matzilonusers.appspot.com',
    measurementId: '', // Not provided in JSON, fill in if available
  );
}
